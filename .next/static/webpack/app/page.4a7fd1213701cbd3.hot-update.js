"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/contractService.ts":
/*!*****************************************!*\
  !*** ./src/services/contractService.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeExpiredProposal: function() { return /* binding */ closeExpiredProposal; },\n/* harmony export */   createProposal: function() { return /* binding */ createProposal; },\n/* harmony export */   getContract: function() { return /* binding */ getContract; },\n/* harmony export */   getProposals: function() { return /* binding */ getProposals; },\n/* harmony export */   getProviderAndSigner: function() { return /* binding */ getProviderAndSigner; },\n/* harmony export */   voteOnProposal: function() { return /* binding */ voteOnProposal; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/providers/provider-browser.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/contract/contract.js\");\n/* harmony import */ var _lib_contractConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/contractConfig */ \"(app-pages-browser)/./src/lib/contractConfig.ts\");\n\n\n// Get the provider and signer\nconst getProviderAndSigner = async ()=>{\n    if (false) {}\n    const { ethereum } = window;\n    if (!ethereum) {\n        throw new Error(\"MetaMask is not installed. Please install it to use this app.\");\n    }\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(ethereum);\n    const signer = await provider.getSigner();\n    return {\n        provider,\n        signer\n    };\n};\n// Get the contract instance\nconst getContract = async function() {\n    let useSigner = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    try {\n        if (!_lib_contractConfig__WEBPACK_IMPORTED_MODULE_0__.VOTING_CONTRACT_ADDRESS) {\n            throw new Error(\"Contract address is not configured. Please deploy the contract first.\");\n        }\n        const { provider, signer } = await getProviderAndSigner();\n        // Return contract instance with signer (for transactions) or provider (for read-only)\n        return new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(_lib_contractConfig__WEBPACK_IMPORTED_MODULE_0__.VOTING_CONTRACT_ADDRESS, _lib_contractConfig__WEBPACK_IMPORTED_MODULE_0__.VOTING_ABI, useSigner ? signer : provider);\n    } catch (error) {\n        console.error(\"Error getting contract:\", error);\n        throw error;\n    }\n};\n// Get all proposals\nconst getProposals = async ()=>{\n    try {\n        if (!_lib_contractConfig__WEBPACK_IMPORTED_MODULE_0__.VOTING_CONTRACT_ADDRESS) {\n            throw new Error(\"Contract address is not configured. Please deploy the contract first.\");\n        }\n        const contract = await getContract();\n        const userAddress = (await (await getProviderAndSigner()).signer.getAddress()).toLowerCase();\n        // Get total number of proposals\n        const count = await contract.getProposalCount();\n        const proposals = [];\n        // Fetch each proposal\n        for(let i = 0; i < count; i++){\n            const proposal = await contract.getProposal(i);\n            const hasVoted = await contract.hasVoted(i, userAddress);\n            proposals.push({\n                id: i,\n                title: proposal[0],\n                description: proposal[1],\n                voteCount: Number(proposal[2]),\n                deadline: new Date(Number(proposal[3]) * 1000),\n                active: proposal[4],\n                hasVoted\n            });\n        }\n        return proposals;\n    } catch (error) {\n        console.error(\"Error getting proposals:\", error);\n        throw error;\n    }\n};\n// Create a new proposal\nconst createProposal = async (title, description, durationInDays)=>{\n    try {\n        const contract = await getContract(true);\n        const tx = await contract.createProposal(title, description, durationInDays);\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n        // Extract the proposal ID from the event\n        const event = receipt.logs.filter((log)=>{\n            var _log_fragment;\n            return ((_log_fragment = log.fragment) === null || _log_fragment === void 0 ? void 0 : _log_fragment.name) === \"ProposalCreated\";\n        }).map((log)=>{\n            const parsedLog = contract.interface.parseLog({\n                topics: [\n                    ...log.topics\n                ],\n                data: log.data\n            });\n            return parsedLog === null || parsedLog === void 0 ? void 0 : parsedLog.args;\n        })[0];\n        return event ? Number(event[0]) : -1;\n    } catch (error) {\n        console.error(\"Error creating proposal:\", error);\n        throw error;\n    }\n};\n// Vote on a proposal\nconst voteOnProposal = async (proposalId)=>{\n    try {\n        const contract = await getContract(true);\n        const tx = await contract.vote(proposalId);\n        await tx.wait();\n    } catch (error) {\n        console.error(\"Error voting on proposal \".concat(proposalId, \":\"), error);\n        throw error;\n    }\n};\n// Close an expired proposal\nconst closeExpiredProposal = async (proposalId)=>{\n    try {\n        const contract = await getContract(true);\n        const tx = await contract.closeExpiredProposal(proposalId);\n        await tx.wait();\n    } catch (error) {\n        console.error(\"Error closing proposal \".concat(proposalId, \":\"), error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/contractService.ts\n"));

/***/ })

});